@use '../utilities' as *;
@use 'icons' as icon;


.alert {
  --background: var(--toast-bkg);
  --color: var(--text-dark);
  position: relative;
  right: 2rem;
  bottom: 2rem;

  display: flex;
  flex-direction: column;
  width: 100%;

  background: var(--background);
  box-shadow: none;

  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 0.25em;
  color: var(--color);
  margin: 0.5rem 0;
  border-radius: 0.125rem;

  box-shadow: var(--box-shadow);
  overflow: visible;

  display: none;

  .message {
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    gap: 0.5rem;

    > div {
      flex-direction: row;
      display: flex;
      align-items: end;
      width: 100%;
      gap: 0.5rem;
    }
  }

  .actionContainer {
    display: flex;
    align-items: center;
  }

  strong {
    display: block;
    margin-bottom: 0.25em;
    font-size: 1.25em;
  }

  p {
    margin: 0;
  }

  .icon {
    align-self: flex-start;

    @include icon.icon;

    font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 48;
  }

  &.-open {
    animation: fadeIn 0.5s ease-in-out;
    display: flex;
  }

  &.-static {
    position: relative;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
  }

  &:not(.-static) {
    top: auto;
    left: auto;
    right: auto;
    bottom: auto;
    &.-bottom {
      &-right {
        bottom: 0.5em;
        right: 0.75em;
      }
      &-left {
        bottom: 0.5em;
        left: 0.75em;
      }
    }
    &.-top {
      &-right {
        top: 0.5em;
        right: 0.75em;
      }
      &-left {
        top: 0.5em;
        left: 0.75em;
      }
    }
  }

  studs-button {
    padding: 1.25rem;
    &::part(studs-button) {
      margin: 0.75rem 0.5rem;
    }
  }

  &.-error {
    --background: var(--error-color);
    --color: #{$white};
  }

  &.-warning {
    --background: var(--warning-color);
    --color: #{$white};
  }

  &.-info {
    --background: var(--info-color);
    --color: #{$white};
  }

  &.-success {
    --background: var(--success-color);
    --color: #{$white};
  }

  &.-fadeIn {
    animation: fadeIn 300ms ease-in-out forwards;
    animation-delay: 100ms;
    opacity: 0;
  }

  &.-fadeOut {
    animation: fadeOut 300ms ease-in-out forwards;
    animation-delay: 100ms;
    opacity: 1;
  }

  &.-slideFadeLeftIn {
    animation: slideFadeLeftIn 300ms ease-in-out forwards;
    animation-delay: 100ms;
    transform: translateX(100%);
    opacity: 0;
  }

  &.-slideFadeLeftOut {
    animation: slideFadeLeftOut 300ms ease-in-out forwards;
    animation-delay: 100ms;
    transform: translateX(0);
    opacity: 1;
  }
}
